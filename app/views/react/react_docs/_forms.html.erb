<% content_for :head do %>
  <%= javascript_import_module_tag module_tag_path %>
<% end %>

<div class="p-4">
  <div class="border">
    <div class="p-2">
      <div class="text-grey-600">

        <h1 class="font-semi-bold text-3xl border-b">
          Forms
        </h1>

        <div class="py-4 my-2">
          <h1 class="font-semi-bold text-2xl">
            Part 1-  Controlled Components
          </h1>
          <div id="formsRoot"></div>
        </div>

        <hr>

        <div class="py-4 my-2">
          <h1 class="font-semi-bold text-2xl">
            Part 2- The textarea Tag
          </h1>
          <div id="formsRoot2"></div>
        </div>

        <hr>

        <div class="py-4 my-2">
          <h1 class="font-semi-bold text-2xl">
            Part 3- The select Tag
          </h1>
          <div id="formsRoot3"></div>
        </div>

        <hr>

        <div class="py-4 my-2">
          <h1 class="font-semi-bold text-2xl">
            Part 4- The file input Tag
          </h1>
          <div>
            In HTML, an file input Tag lets the user choose one or more files from their device storage to be uploaded to a server or manipulated by JavaScript via the
            <a class="font-bold" href="https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications"target="_blank" target="_blank"> File API</a>
            <br><br>
            <span class="font-mono"> &lt;input type="file"> </span>
            <br><br>
            Because its value is read-only, it is an uncontrolled component in React. It is discussed together with other uncontrolled components <a class="font-bold" href="https://reactjs.org/docs/uncontrolled-components.html#the-file-input-tag"target="_blank" target="_blank"> later in the documentation.</a>
          </div>
        </div>

        <hr>

        <div class="py-4 my-2">
          <h1 class="font-semi-bold text-2xl">
            Part 5-  Handling Multiple Inputs
          </h1>
          (Changes value of input when checked)
          <div id="formsRoot5"></div>
        </div>

        <hr>

        <div class="py-4 my-2">
          <h1 class="font-semi-bold text-2xl">
            Part 6-  Controlled Input Null Value
          </h1>
          default value on page load is hi, changes to null after a few seconds
          <div id="formsRoot6"></div>
        </div>

        <hr>

        <div class="py-4 my-2">
          <h1 class="font-semi-bold text-2xl">
            Part 7-  Alternatives to Controlled Components
          </h1>
          <div>
            It can sometimes be tedious to use controlled components, because you need to write an event handler for every way your data can change and pipe all of the input state through a React component. This can become particularly annoying when you are converting a preexisting codebase to React, or integrating a React application with a non-React library. In these situations, you might want to check out <a class="font-bold" href="https://reactjs.org/docs/uncontrolled-components.html" target="_blank">uncontrolled components</a>, an alternative technique for implementing input forms.
          </div>
        </div>

        <hr>

        <div class="py-4 my-2">
          <h1 class="font-semi-bold text-2xl">
            Part 8-  Fully-Fledged Solutions
          </h1>
          <div>
            If you’re looking for a complete solution including validation, keeping track of the visited fields, and handling form submission, <a class="font-bold" href="https://formik.org/" target="_blank">Formik</a> is one of the popular choices. However, it is built on the same principles of controlled components and managing state — so don’t neglect to learn them.
          </div>
        </div>

      </div>
    </div>
  </div>
</div>
